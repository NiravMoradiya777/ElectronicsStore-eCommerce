@model ElectronicsStore_eCommerce.Models.Product

@{
    ViewData["Title"] = "Create Product";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mt-5">
    <h2>Create Product</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["ValidationErrors"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ValidationErrors"]
        </div>
    }

    <div class="col-md-8">
        <form asp-action="Create" asp-controller="Product" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label">Product Name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label">Product Description</label>
                <textarea asp-for="Description" id="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Price" class="control-label">Price</label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CategoryId" class="control-label">Category</label>
                <select asp-for="CategoryId" asp-items="@(new SelectList(ViewBag.Categories, "CategoryId", "Name"))" class="form-control">
                    <option value="">-- Select Category --</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="IsFeatured" class="control-label">Is Featured</label>
                <input asp-for="IsFeatured" type="checkbox" class="form-check-input" />
                <span asp-validation-for="IsFeatured" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="IsSpecialOffer" class="control-label">Is Special Offer</label>
                <input asp-for="IsSpecialOffer" type="checkbox" class="form-check-input" />
                <span asp-validation-for="IsSpecialOffer" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="IsNewArrival" class="control-label">Is New Arrival</label>
                <input asp-for="IsNewArrival" type="checkbox" class="form-check-input" />
                <span asp-validation-for="IsNewArrival" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Images" class="control-label">Product Images</label>
                <input asp-for="Images" name="imageFiles" type="file" multiple class="form-control" />
                <span asp-validation-for="Images" class="text-danger"></span>
            </div>

            <!-- New image preview container -->
            <div id="newImagePreviewContainer" class="mt-3"></div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create Product</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Add event listener to handle file selection and display preview
            $('input[type="file"]').change(function (e) {
                var container = $('#newImagePreviewContainer');
                container.empty();

                // Loop through selected files
                for (var i = 0; i < e.target.files.length; i++) {
                    var file = e.target.files[i];

                    // Create a FileReader
                    var reader = new FileReader();

                    // Closure to capture the file information.
                    reader.onload = (function (theFile) {
                        return function (e) {
                            // Render thumbnail.
                            var imgElement = $('<img class="img-thumbnail mr-2" style="max-width: 100px; max-height: 100px;">');
                            imgElement.attr('src', e.target.result);
                            container.append(imgElement);
                        };
                    })(file);

                    // Read in the image file as a data URL.
                    reader.readAsDataURL(file);
                }
            });

            // Initialize TinyMCE
            tinymce.init({
                selector: '#Description',
                plugins: 'advlist autolink lists link image charmap print preview hr anchor pagebreak',
                toolbar_mode: 'floating',
                tinycomments_mode: 'embedded',
                tinycomments_author: 'Author name',
                height: 300,
            });
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
